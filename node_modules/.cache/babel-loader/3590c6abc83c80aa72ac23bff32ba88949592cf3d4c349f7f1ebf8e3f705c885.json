{"ast":null,"code":"import axios from\"axios\";const instance=axios.create({baseURL:'https://magazine-web-670c.onrender.com'});// const instance2 = axios.create({\n//     baseURL: 'https://comp1640.pythonanywhere.com/'\n// });\n// Add a response interceptor\ninstance.interceptors.response.use(function(response){// Any status code that lie within the range of 2xx cause this function to trigger\n// Do something with response data\nreturn response.data?response.data:{statusCode:response.status};},function(error){let res={};if(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nres.data=error.response.data;res.status=error.response.status;res.headers=error.response.headers;}else if(error.request){// The request was made but no response was received\n// `error.request` is an instance of XMLHttpRequest in the browser \n// and an instance of http.ClientRequest in node.js\nconsole.log(error.request);}else{// Something happened in setting up the request that triggered an Error\nconsole.log('Error',error.message);}return res;});// instance2.interceptors.response.use(function (response) {\n//     // Any status code that lie within the range of 2xx cause this function to trigger\n//     // Do something with response data\n//     return response.data ? response.data : { statusCode: response.status };\n// }, function (error) {\n//     let res = {}\n//     if (error.response) {\n//         // The request was made and the server responded with a status code\n//         // that falls out of the range of 2xx\n//         res.data = error.response.data\n//         res.status = error.response.status\n//         res.headers = error.response.headers\n//     } else if (error.request) {\n//         // The request was made but no response was received\n//         // `error.request` is an instance of XMLHttpRequest in the browser \n//         // and an instance of http.ClientRequest in node.js\n//         console.log(error.request);\n//     } else {\n//         // Something happened in setting up the request that triggered an Error\n//         console.log('Error', error.message);\n//     }\n//     return res\n// });\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","response","use","data","statusCode","status","error","res","headers","request","console","log","message"],"sources":["C:/Users/ADMIN/OneDrive/Tài liệu/react-project/1640/src/service/customize-axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://magazine-web-670c.onrender.com'\r\n});\r\n// const instance2 = axios.create({\r\n//     baseURL: 'https://comp1640.pythonanywhere.com/'\r\n// });\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response.data ? response.data : { statusCode: response.status };\r\n}, function (error) {\r\n    let res = {}\r\n    if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        res.data = error.response.data\r\n        res.status = error.response.status\r\n        res.headers = error.response.headers\r\n    } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser \r\n        // and an instance of http.ClientRequest in node.js\r\n        console.log(error.request);\r\n    } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n    }\r\n    return res\r\n});\r\n\r\n// instance2.interceptors.response.use(function (response) {\r\n//     // Any status code that lie within the range of 2xx cause this function to trigger\r\n//     // Do something with response data\r\n//     return response.data ? response.data : { statusCode: response.status };\r\n// }, function (error) {\r\n//     let res = {}\r\n//     if (error.response) {\r\n//         // The request was made and the server responded with a status code\r\n//         // that falls out of the range of 2xx\r\n//         res.data = error.response.data\r\n//         res.status = error.response.status\r\n//         res.headers = error.response.headers\r\n//     } else if (error.request) {\r\n//         // The request was made but no response was received\r\n//         // `error.request` is an instance of XMLHttpRequest in the browser \r\n//         // and an instance of http.ClientRequest in node.js\r\n//         console.log(error.request);\r\n//     } else {\r\n//         // Something happened in setting up the request that triggered an Error\r\n//         console.log('Error', error.message);\r\n//     }\r\n//     return res\r\n// });\r\n\r\nexport default instance"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,QAAQ,CAAGD,KAAK,CAACE,MAAM,CAAC,CAC1BC,OAAO,CAAE,wCACb,CAAC,CAAC,CACF;AACA;AACA;AACA;AACAF,QAAQ,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAC,SAAUD,QAAQ,CAAE,CACnD;AACA;AACA,MAAO,CAAAA,QAAQ,CAACE,IAAI,CAAGF,QAAQ,CAACE,IAAI,CAAG,CAAEC,UAAU,CAAEH,QAAQ,CAACI,MAAO,CAAC,CAC1E,CAAC,CAAE,SAAUC,KAAK,CAAE,CAChB,GAAI,CAAAC,GAAG,CAAG,CAAC,CAAC,CACZ,GAAID,KAAK,CAACL,QAAQ,CAAE,CAChB;AACA;AACAM,GAAG,CAACJ,IAAI,CAAGG,KAAK,CAACL,QAAQ,CAACE,IAAI,CAC9BI,GAAG,CAACF,MAAM,CAAGC,KAAK,CAACL,QAAQ,CAACI,MAAM,CAClCE,GAAG,CAACC,OAAO,CAAGF,KAAK,CAACL,QAAQ,CAACO,OAAO,CACxC,CAAC,IAAM,IAAIF,KAAK,CAACG,OAAO,CAAE,CACtB;AACA;AACA;AACAC,OAAO,CAACC,GAAG,CAACL,KAAK,CAACG,OAAO,CAAC,CAC9B,CAAC,IAAM,CACH;AACAC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAEL,KAAK,CAACM,OAAO,CAAC,CACvC,CACA,MAAO,CAAAL,GAAG,CACd,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAe,CAAAV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}